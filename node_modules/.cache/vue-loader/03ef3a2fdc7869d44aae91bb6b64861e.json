{"remainingRequest":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/src/components/basket.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/src/components/basket.vue","mtime":1640119269698},{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aysegul.kaya/Desktop/carts-summary/bymn-fe-challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uL2Fzc2V0cy9zY3NzL2Jhc2tldC5zY3NzIjsK"},{"version":3,"sources":["basket.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA","file":"basket.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"basket\">\n        <div class=\"container\">  \n            <div class=\"title\">\n              <span>ALIŞVERİŞ SEPETİM</span>\n            </div>\n            <div class=\"products\">\n                <div class=\"product-item border-top\" v-for=\"item in cart\" :key=\"item.id\">\n                    <div class=\"product-img\">\n                        <img :src=\"item.ResizedImage\">\n                    </div>\n                    <div class=\"product-detail\">\n                        <div class=\"brand font-weight-bold\">{{ (item.Brand).toUpperCase() }}</div>\n                        <div class=\"display-name\">{{ item.DisplayName }}</div>\n                        <div class=\"price-area\">\n                            <div class=\"discount-rate\">-% {{ item.DiscountRate }}</div>\n                            <div class=\"amount\">\n                                <div class=\"base-price\">\n                                    {{ (Math.round((item.OriginalPrice)*100 )/100).toFixed(2)}} TL\n                                </div>\n                                <div class=\"sale-price font-weight-bold\">\n                                    {{ (Math.round((item.SalePrice)*100 )/100).toFixed(2)}} TL\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"color\">\n                            <span class=\"font-weight-bold\">Renk</span>\n                            <span class=\"text\">{{ item.Color }}</span>\n                        </div>\n                        <div class=\"size\">\n                            <span class=\"font-weight-bold\">Beden</span>\n                            <span class=\"text\">{{ item.Size }}</span>\n                        </div>\n                        <div class=\"quantity\">\n                            <span class=\"font-weight-bold\">Adet</span>\n                            <span class=\"text\">\n                                <select class=\"form-control\" v-model=\"item.Quantity\" :name=\"'item_'+item.id\"\n                                v-on:change=\"selectedQuantity($event,item)\" @click=\"oldSelectionQuantity($event)\">\n                                    <option v-for=\"(i) in 10\" :key=\"i\" :value=\"i\">\n                                        {{ i }} Adet \n                                    </option>\n                                </select>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"remove-item\">\n                        <button class=\"btn btn-outline-danger\" @click=\"removeItem(item)\">Sil</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n      </div>\n</template>\n\n<script>\nexport default {\n  name: 'Basket',\n  props: ['currency'],\n  data() {\n      return {\n          oldQuantityValue: \"\"\n      }\n  },\n  computed: {\n    cart() {\n      return this.$store.state.cart;\n    },\n    selectedCart() {\n        return this.$store.state.selectedCart;\n    },\n    summary() {\n      return this.$store.state.summary;\n    }\n  },\n  mounted() {\n    this.$store.dispatch(\"getCart\");\n  },\n   methods: {\n       oldSelectionQuantity(oldValue) {\n           this.oldQuantityValue = oldValue.target.value;\n       },\n       selectedQuantity(e,item) {\n            let value = e.target.value;\n            let perOriginalPrice = item.OriginalPrice/this.oldQuantityValue;\n            let perSalePrice = item.SalePrice/this.oldQuantityValue;\n            let perDiscountAmount = item.DiscountAmount/this.oldQuantityValue;\n            /** update basket price*/\n            item.OriginalPrice = perOriginalPrice*value;\n            item.SalePrice = perSalePrice*value;\n            item.DiscountAmount = perDiscountAmount*value;\n            \n            this.$store.dispatch(\"selectedCart\", item);\n            this.updateSummary(value, perOriginalPrice, perSalePrice, perDiscountAmount);\n            \n\n       },\n       updateSummary(newQuantity, perOriginal, perSale, perDiscount, isAfterDelete) {\n            let TotalAmount = this.summary.TotalAmount; \n            let DiscountAmount = this.summary.DiscountAmount;\n            let GeneralTotalAmount = this.summary.GeneralTotalAmount;\n            let woSelectedProductAmount = 0;\n            let woSelectedProductDiscount = 0;\n            let woSelectedProductGeneralTotal = 0;\n            if(isAfterDelete) {\n                this.summary.TotalAmount = TotalAmount - perOriginal;\n                this.summary.DiscountAmount = DiscountAmount - perDiscount;\n                this.summary.GeneralTotalAmount = GeneralTotalAmount - perSale;\n            } else {\n                woSelectedProductAmount = (TotalAmount - (perOriginal*(this.oldQuantityValue)));\n                woSelectedProductDiscount = (DiscountAmount - (perDiscount*(this.oldQuantityValue)));\n                woSelectedProductGeneralTotal = (GeneralTotalAmount - (perSale*(this.oldQuantityValue)));\n                this.summary.TotalAmount = woSelectedProductAmount + (perOriginal*newQuantity);\n                this.summary.DiscountAmount = woSelectedProductDiscount + (perDiscount*newQuantity);\n                this.summary.GeneralTotalAmount = woSelectedProductGeneralTotal + (perSale*newQuantity);\n            }\n       },\n       removeItem(item) {\n            this.$store.dispatch(\"removeCartItem\", item.id);\n            this.$store.dispatch(\"getCart\", item);\n            this.updateSummary(item.Quantity, item.OriginalPrice, item.SalePrice, item.DiscountAmount, true);\n\n       }\n   }\n}\n</script>\n\n<style lang=\"scss\">\n    @import \"../assets/scss/basket.scss\";\n</style>"]}]}